/*
!Операнд -это  то к чему применяеться оператор,их ещё называют аргументами.
*/
//?Примеры:
let userAge = 30 - 6; //Число 30 и 6 - это операнд.
//Либо
let userHeight = 20 - 20;
//Переменная h u y - это операнды.

/*
Бинарными называються операторы которые применяються к двум операндам.
В нашем примере вычитание -,это бинарный оператор.
*/
let userAgeColor = 30 - 6;
/*Унарным считаються оператор,который применен только к одному операнду,
например:
*/
let userCash = -800;

//!----------------------------------------------------------------
//!Математические
//? It's +
let x;
x = 5 + 8;
console.log(`Результат сложения: ${x}`);

//? It's -
x = 9 - 5;
console.log(`Результат вычитания: ${x}`);

//? It's *
x = 2 * 3;
console.log(`Результат умножения: ${x}`);

//? It's /
x = 10 / 2;
console.log(`Результат деления: ${x}`);

//?Взятие остатка от деления %
x = 11 % 3;
console.log(`Результат взятия остатка от деления: ${x}`);
//*Проверка: 11=3*3(неполное частное от деления)+2(остаток)

//?Возведение в степень **.
x = 5 ** 3;
console.log(`Результат возведения в степень: ${x}`);
//*Число 5 умноженное на себя 3 раза.5*5*5=125.

//*Спец возможности операторов в тетради!

//!----------------------------------------------------------------
//!Оператор присваивания "="
//?Присваивание по цепочке
let resultOne = (resultTwo = resultThree = 1 + 2);
console.log(resultOne);
console.log(resultTwo);
console.log(resultThree);

//?Сокращенная запись вычислений с присвоением
let users = 5;
users = users + 3;
users = users * 2;

//!----------------------------------------------------------------
//!Инкремент/Декремент
//?Инкремент ++ и --
let addUser = 2;
addUser++;
console.log(addUser);

//!----------------------------------------------------------------
//!Побитовые операторы
//?Оператор запятая
let usersCounter = (8 + 2, 19 + 1);
console.log(usersCounter); 

//*Результат будет последнего выражения

//!----------------------------------------------------------------
//!Операторы сравнения
/*Больше: a > b 
Меньше: а < b 
Больше или равно: a >= b
Меньшеили равно: a <= b
Равно: a == b
Не равно: a != b
Строгое равно: a === b
Строгое не равно: a !== b
*/

//?Алфавитный порядок
console.log("B" > "A");

//?Алфавитный порядок
console.log("Скрипт" > "Скрипка");

//?Кол-во символов
console.log("Слайдер" > "Слайд");

//?Регистр
console.log("Фрилансер" > "фрилансер");

//?Преобразование в число
console.log("58" > 10);
console.log("007" == 7);

//?Логическое значение true=1,false=0;
console.log(true == 1);
console.log(false == 0);

//?Оператор строгого равенства или не равенства
//?проверяет равенство без типов
console.log(0 === false);
console.log("007" === 7);
console.log("58" !== 58);

//!----------------------------------------------------------------
//!Логические операторы
/*//*Оператор или "||"- 2 вертикальны черты.
1.Слева на право.
2.Каждый операнд конвентирует в логическое значение.
3.Если все операнды ложные возвращает значение последнего из них.
*/
//?Булевые значения
console.log(true || true);
console.log(false || true);
console.log(true || false);
console.log(false || false);

//*Первый true это 1
console.log(1 || 0);

//*Первый true это true
console.log(true || "Фрилансер");

//*Первый true  это 58
console.log(null || 58);

//*Первый true это фрилансер
console.log(null || "Фрилансер" || 0);

//*true нет совсем,вернет последнее значение - 0
console.log(undefined || "" || null || 0);

//?Присвоение значений в переменную
let UserName = "";
let UserNickName = "Фрилансер";

let user = UserName || UserNickName || "Без имени";
console.log(user);

//?Ещё один пример.Сокращённое вычисление.Условие.
let admins = 10;
let users1 = 5;
admins > users1 || users1++;
console.log(users1);

//!----------------------------------------------------------------
//!Оператор && (И)
/*
1.Вычисляет операнды слева направо
2.Каждый операнд преобразовывает в логическое значение
    Если результат False,останавливаеться и возвращает
    исходное значение этого операнда.
3.Если все операнды были Истинны,возвращает значение последнего. 
*/
//?Булевые значения
console.log(true && true);
console.log(false && true);
console.log(true && false);
console.log(false && false);

//?Разные типы
//*Пример-1. 0-False
console.log("Фрилансер" && 0 && 2 && 3);
//*Пример-2.Null - false
console.log(1 && 2 && null && 3);
//*Пример-3.Все true
console.log("15" && "42");

//?Приоритет && больше чем ||
console.log((1 && 0) || (2 && 1));

//?Подобие условия
let UserVariant = 1;
UserVariant > 0 && console.log(`Пользователей ${UserVariant}`);

//!----------------------------------------------------------------
//!Оператор ! (НЕ)
/*Выполняет следущие действия:
1.Сначала приводит аргумент к логическому типу True / False.
2.Затем возвращает противоположоное значение.
*/
//?Булевые значения
console.log(!true);

//?Самый высокий приоритет
console.log((!true && 58) || (18 && !1));

//?Используеться для преобразования типа в boolean
console.log(!!"Фрилансер");
//или
console.log(Boolean("Фрилансер"));

//!----------------------------------------------------------------
//!Оператор ?? возвращает первый аргумент,если он не null/undefiend,иначе второй.
let nameMy = "";
console.log(nameMy ?? "Без имени");

console.log((!false && 11) || (18 && !""));
//* 11-true

